package com.company.java015_lamda_stram;

import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.IntBinaryOperator;
import java.util.function.Predicate;
import java.util.function.Supplier;

public class Lambda004_api {

	public static void main(String[] args) {
		//()->{}
		//void java.util.function.Consumer.accept(T t) / (T t) -> {x} accept	
		Consumer<String> consumer = (t)->{System.out.println("hello"+t);};
		consumer.accept("sally");
		consumer.accept("lambda");
		
		// T java.until.function.Supplier.get() / ()-> {return} /get		
		Supplier<String> supplier;
		
		//boolean java.util.function.Predicate.test(T t) (T t)-> {return boolean} / test
		Predicate<Integer> predicate;
		
		//R java.util.function.Function.apply( T t ) / (T t)-> {return R} / apply
		Function<String,Integer>function;
		
		//Open Declaration int java.util.function.IntBinaryOperator.applyAsInt( int left, int right )
		// (int left, int right) -> int / applyAsInt
		IntBinaryOperator operator;
		
	}
}

/*
 *자바의 api 함수형 인터페이스
 *
 *1. Consumer 받는용도 
 *void java.util.function.Consumer.accept(T t)
 *2. Supplier 제공용도
 *3. Predicate 판단용도
 *4. Function 처리용도
 *5. Operator 연산용도
 *
 *
 * */
 