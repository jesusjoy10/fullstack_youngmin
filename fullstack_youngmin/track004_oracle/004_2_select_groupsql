-- 1
select * 
from emp;

--2. 집계함수 - sum,count,max,min,avg
select sum(sal)  -- 1개
from emp;

--3. 부서의 직업별 급여의 평균
select deptno, job, avg(sal)
from emp
group by deptno, job;

--4. where vs having [급여의 평균]에서 2000이상
select deptno, job, avg(sal) --5
from emp              --1 
where sal>=1500       --2 전체데이터에서 필터링
group by deptno, job --3 [부서의 직업별], 급여의 평균
having avg(sal) > 2000; --4 3번에서 나온 급여의 평군으로 having


-- 5. rollup , cube, grouping sets / pivot, unpivot
--     [부서의 직업별], 명수, 급여의 평균
-- rollup : 10부서의 직업 급여의 평균, 20부서의 급여 평균 , 30부서의 급여 평균 = 전체 총계
select deptno,job, count(*), round(avg(sal),1)
from emp
group by rollup(deptno,job);

-- cube : deptno + job 전체총계, job 총계, deptno 총계, deptno + job 각각의 세부내용  큰 거에서 > 작은걸로
select deptno,job, count(*), round(avg(sal),1)
from emp
group by cube(deptno,job);

--grouping : 뭘로 묶였는지 확인 - 해당컬럼이 실제로 그룹화되었니? 0 그룹화에 포함됨 / 1 그룹화에 포함이 되지 않음
select deptno,job, grouping(deptno),grouping(job) 
from emp
group by cube(deptno,job); --deptno + job ,job,deptno ,둘다세부

--pivot: 행 데이터를 열로
select *
from ( select 컬럼1,컬럼2 , 집계대상컬럼 from 테이블명 ) -- 원본데이터 : pivot을 적용할 대상
pivot (집계함수(집계대상)for 컬럼기준 in (값1,값2,값3,,,)   ); -- 집계함수 : 어떤컬럼 기준으로 만들 것인지 지정

-- 1) job별 부서들의10,20,30 최대급여
select *
from (select deptno, job, sal from emp)
pivot( max(sal) for deptno in(10,20,30) ); -- job 별 부서 10,20,30의 최대급여

-- 2) 직무별 부서별 사원 수 -job별 부서 10,20,30 사원 수 
select *
from ( select job , deptno ,empno from emp)
pivot (count(empno)for deptno in (10,20,30));

-- 3) 부서별 직무 평균 급여
select *
from (select deptno, job , sal from emp)
pivot ( avg(sal) for job in ('CLERK' , 'MANAGER' , 'SALESMAN') );

-- unpivot 열데이터를 행으로
SELECT deptno, job, sal
FROM (SELECT deptno,
MAX(DECODE(job, 'CLERK', sal)) AS CLERK,
MAX(DECODE(job, 'MANAGER', sal)) AS MANAGER
FROM emp
GROUP BY deptno)
   -- 원본 데이터 : unpivot을 적용할 대상( 열형태로 집계된 데이터)
UNPIVOT (
    sal FOR job IN (CLERK, MANAGER) -- unpivot : 열을 행으로 변환, 기준컬럼 열이름이었던 것을 행 값으로 변환
    );
--풀이1_ deptno, CLERK (열) , MANAGER (열)
--풀이2_ deptno, job ,sal
          --      CLERK
          --    MANAGER

--Q025
--EMP 테이블에서 ROLLUP 함수를 이용하여
--부서별(큰그룹) 직책(소그룹)의
--사원수, 가장 높은 급여, 급여의 합, 평균급여를 출력하시오.
select deptno, job , count(*), max(sal), sum(sal), avg(sal)
from emp --1
group by rollup (deptno, job);


--Q026
--EMP 테이블에서 CUBE(DEPTNO, JOB) 함수를 이용하여
--부서별(큰그룹) 직책(소그룹)의
--사원수, 가장 높은 급여, 급여의 합, 평균급여를 출력하시오
select deptno, job , count(*), max(sal), sum(sal), round(avg(sal),2)
from emp
group by cube(deptno, job);


--Q027
--EMP 테이블에서
--DEPTNO를 먼저 그룹화한후 ROLLUP 함수에 JOB을 지정하여
--사원수를 출력하시오.
select deptno, job , count(*)
from emp
group by deptno, rollup ( job);

--Q028
--EMP 테이블에서
--JOB을 먼저 그룹화한후 ROLLUP 함수에 DEPTNO을 지정하여
--사원수를 출력하시오.
select deptno,job, count(*)
from emp
group by job, rollup ( deptno);

--Q029
--EMP 테이블에서
--GROUPING SETS (DEPTNO, JOB) 함수를 사용하여
--열별 그룹으로 묶어어 결과로 출력하시오.
select deptno,job, count(*)
from emp
group by GROUPING SETS (DEPTNO, JOB);

--Q030
--EMP 테이블에서 DEPTNO JOB열의 그룹화결과를 GROUPING 함수로 출력하시오.
select deptno,job, count(*),max(sal),sum(sal),avg(sal), GROUPING(DEPTNO),GROUPING(job)
from emp
group by rollup(DEPTNO, JOB);

--Q031
--DECODE문으로 GROUPING 함수를 적용하여 결과를 표기하시오오
SELECT decode (grouping(deptno),1,'all_deptno',deptno) deptno,
       decode(grouping(job),1,'all_job', job)job,
 COUNT(*), MAX(sal),  SUM(sal), AVG(sal)   
FROM emp
GROUP BY cube(deptno, job)
order by deptno,job;


--Q032
--DEPTNO, JOB을 함께 명시한 GROUPING_ID 함수를 사용하시오. 
-- grouping_id : 집계수준(몇개수준)
select deptno, job , count(*), sum(sal), grouping(deptno), grouping(job),grouping_ID(deptno,job)
from emp
GROUP BY cube(deptno, job)
order by deptno,job;

1) deptno(o),job(0)             grouping_id (0) 정상조합  0*2^1 + 0*2^1 = 0 
2) deptno(o),job(1: NULL)       grouping_id (1) deptno 실제값, job null 0*2^1 + 1*2^1 = 1 
3) deptno (1:null) , job(0)     grouping_id (2) deptno,  실제값, job null 1*2^1 + 0*2^0 = 2
4) deptno (1:null) ,job(1:null) grouping_id (3) 전체집계 둘다 null  1*2^1 + 1*2^0 = 3 


--Q033
--EMP 테이블에서 GROUP BY로 그룹화하여 부서번호와 사원이름을 출력하시오.
select deptno, ename
from emp
group by deptno , ename;

--Q034
--EMP 테이블에서 부서별 사원이름을 나란히 나열하여 출력하시오.
--LISTAGG( 나열할 열, 구분자)
--WITHIN GROUP(ORDER BY 나열할 열의 정렬기준)
select deptno, LISTAGG(ename, ',') WITHIN GROUP(ORDER BY sal desc) enames
from emp
group by deptno;


--Q035
--EMP 테이블에서 부서, 직책별 그룹화하여 최고급여데이터를 출력하시오
select deptno,job, max(sal)
from emp
group by deptno,job
order by deptno ,job;

--Q036
--EMP 테이블에서 PIVOT함수를 사용하여 직책별* 부서별 최고급여를 2차원 표 형태로 출력하시오
select *
from (select deptno, job, sal from emp)
pivot( max(sal) for deptno in(10,20,30) );

--Q037
--EMP 테이블에서 PIVOT함수를 사용하여 부서별*직책별 최고급여를 2차원 표 형태로 출력하시오
select *
from (select deptno, job, sal from emp)
pivot( max(sal) for job in('PRESIDENT','MANAGER','SALESMAN','CLERK','ANALYST') );

--Q038
--EMP 테이블에서 DECODE문을 활용하여 PIVOT 함수와 같은 결과를 출력하시오
select deptno 
, max(decode(job,'CLERK',sal))CLERK
, max(decode(job,'PRESIDENT',sal))PRESIDENT
, max(decode(job,'SALESMAN',sal))SALESMAN
, max(decode(job,'MANAGER',sal))MANAGER
, max(decode(job,'ANALYST',sal))ANALYST
from  emp
group by deptno;

--Q039
--EMP 테이블에서 UNPIVOT 활용하여 열로 구분된 그룹을 행으로 출력하시오
select *
from (select deptno 
, max(decode(job,'CLERK',sal))CLERK
, max(decode(job,'PRESIDENT',sal))PRESIDENT
, max(decode(job,'SALESMAN',sal))SALESMAN
, max(decode(job,'MANAGER',sal))MANAGER
, max(decode(job,'ANALYST',sal))ANALYST
from  emp
group by deptno
)
unpivot(sal for job in(PRESIDENT,MANAGER,SALESMAN,CLERK,ANALYST)
)
order by DEPTNO,sal;

--Ex001
--EMP 테이블을 이용하여 다음과 같이 출력하시오.
--부서번호(DEPTNO) , 평균급여(AVG_SAL) , 최고급여(MAX_SAL) , 최저급여(MIN_SAL) , 사원수(CNT) 를 조회하시오
--평균급여를 출력시 소수점을 제외하고 각 부서번호별로 출력하시오.
select deptno , trunc(avg(sal)) avg_sal, max(sal) max_sal, min(sal) min_sal, count(*) cnt
from emp
group by deptno;

--Ex002
--EMP 테이블을 이용하여 다음과 같이 출력하시오.
--같은직책(JOB)에 종사하는 사원이 3명 이상인 직책과 인원수를 출력하시오.
select job, count(*)
from emp
group by job
having count(*) >=3
order by count(*) desc , job desc;

--Ex003
--EMP 테이블을 이용하여 다음과 같이 출력하시오.
--사원들의 입사년도(HIRE_YEAR)를 기준으로 부서별 몇명이 입사했는지 조회하시오.
select to_char(hiredate, 'yyyy')as HIRE_YEAR , deptno, count(*) as cnt
from emp
group by deptno , to_char(hiredate, 'yyyy')
order by deptno,to_char(hiredate, 'yyyy');

Ex004
EMP 테이블을 이용하여 다음과 같이 출력하시오.
추가수당(COMM)을 받는 사원수와 받지않는 사원수를 조회하시오.
select nvl2(comm,'o','x') exist_comm ,count(*)
from emp
group by comm;

select decode(comm ,null,'x','o')exist_comm, count(*)cnt
from emp
group by decode(comm ,null,'x','o');

select case when comm is null then 'x' ELSE 'o' END as exist_comm, count(*)as cnt
from emp
group by  case when comm is null then 'x' ELSE 'o' END;

--Ex005
--EMP 테이블을 이용하여 다음과 같이 출력하시오.
--각 부서의 입사연도별 사원수, 최고급여, 급여합, 평균급여를 출력하고
--각 부서별 소계와 총계를 출력하시오. (ROLLUP)
select deptno,to_char(hiredate, 'yyyy')as HIRE_YEAR, count(*),max(sal), sum(sal), avg(sal)
from emp
group by rollup (deptno,to_char(hiredate, 'yyyy'));





